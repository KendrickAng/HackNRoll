{"version":3,"sources":["Navi/Navi.js","About/About.js","Body/Body.js","Homepage/Homepage.js","App.js","serviceWorker.js","index.js","About/pizza.svg","Body/emoji.svg"],"names":["Navi","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Component","About","src","pizza","alt","class","target","rel","Bounce","styled","div","keyframes","bounce","Home","state","name","handleChange","event","setState","value","getInsult","HttpClient","get","response","concat","substr","document","getElementById","innerHTML","emoji","InputGroup","FormControl","onChange","this","placeholder","aria-label","Append","Button","onClick","Alert","React","theUrl","callback","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","Homepage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"mPAuBeA,E,iLAjBP,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACpC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAnB,UACA,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,KAAf,gB,GAVTQ,aC4CJC,MA3Cf,WACE,OACE,yBAAKH,UAAU,SACX,kBAAC,EAAD,MACF,4BAAQA,UAAU,gBAEhB,yBAAKI,IAAKC,IAAOL,UAAU,wBAAwBM,IAAI,SACvD,yBAAKC,MAAM,cAAX,kCAII,uBACEP,UAAU,aACVN,KAAK,mCACLc,OAAO,SACPC,IAAI,uBAJN,gBAQA,uBACET,UAAU,aACVN,KAAK,0CACLc,OAAO,SACPC,IAAI,uBAJN,eAQA,uBACET,UAAU,aACVN,KAAK,8BACLc,OAAO,SACPC,IAAI,uBAJN,gBAQF,yBAAKF,MAAM,WAAX,4D,wPC/BV,IAAMG,EAASC,IAAOC,IAAV,IAA8BC,YAA9B,IAA0CC,WAyCvCC,E,2MAtCXC,MAAQ,CACJC,KAAM,O,EAGVC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEH,KAAME,EAAMX,OAAOa,S,EAGvCC,UAAY,YACK,IAAIC,GACVC,IAAI,yCAAyC,SAACC,GACjDA,EAAW,MAAMC,OAAOD,EAASE,OAAO,IACxCF,EAAW,EAAKT,MAAMC,KAAKS,OAAOD,GAClCG,SAASC,eAAe,YAAYC,UAAYL,M,wEAKpD,OACI,yBAAKzB,UAAU,iFACX,kBAACU,EAAD,KAAQ,yBAAKV,UAAU,QAAQI,IAAK2B,IAAOzB,IAAI,MAC/C,kBAAC0B,EAAA,EAAD,CAAYhC,UAAU,OAClB,kBAACiC,EAAA,EAAD,CAAaC,SAAUC,KAAKjB,aACxBkB,YAAY,iBACZC,aAAW,iBAEf,kBAACL,EAAA,EAAWM,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAASL,KAAKb,UAAW/B,QAAQ,WAAzC,eAGR,kBAACkD,EAAA,EAAD,CAAOlD,QAAQ,QACX,wBAAIO,GAAG,YAAP,8B,GAhCD4C,IAAMxC,WAyCrBqB,EAAa,WACbY,KAAKX,IAAM,SAASmB,EAAQC,GACxB,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,mBAAqB,WACE,IAAvBF,EAAQG,YAAuC,MAAnBH,EAAQI,QACpCL,EAASC,EAAQK,eAEzBL,EAAQM,KAAK,MAAOR,GAAQ,GAC5BE,EAAQO,KAAK,QC7CNC,E,iLATP,OACI,yBAAK9C,MAAM,cACP,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALOL,aCcRoD,E,iLAXX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,IACjC,kBAAC,IAAD,CAAOG,KAAK,SAASC,UAAWtD,U,GAN9BD,aCOEwD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCTNC,IAASC,OAAO,kBAAC,EAAD,MAASpC,SAASC,eAAe,SD0H3C,kBAAmBoC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.6f0ad374.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nclass Navi extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                    <Navbar.Brand href=\"/\">ANGERY</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"/about\">About</Nav.Link>\n                            <Nav.Link href=\"#\">Game</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Navi;\n","import React from 'react';\nimport pizza from './pizza.svg';\nimport './About.css';\nimport Navi from '../Navi/Navi.js';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n        <Navi/>\n      <header className=\"About-header\">\n        \n        <img src={pizza} className=\"About-logo u-bottom-m\" alt=\"logo\" />\n        <div class=\"u-bottom-s\">\n          This app is brought to you by:\n        </div> \n\n            <a\n              className=\"About-link\"\n              href=\"https://kendrickang.github.io/me\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Kendrick Ang\n            </a>\n            <a\n              className=\"About-link\"\n              href=\"https://website-lowjiayee.herokuapp.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Low Jia Yee\n            </a>\n            <a\n              className=\"About-link\"\n              href=\"https://teikjun.netlify.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Tan Teik Jun\n            </a>\n          <div class=\"u-top-m\">\n          (╯°□°)╯︵ ┻━┻ \n          </div> \n      </header>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport './Body.css';\nimport emoji from './emoji.svg';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport styled, { keyframes } from 'styled-components';\nimport { bounce } from 'react-animations';\nconst Bounce = styled.div`animation: 2s ${keyframes`${bounce}`} infinite`;\n\nclass Home extends React.Component {\n    state = {\n        name: \"You\",\n    };\n\n    handleChange = event => {\n        this.setState({ name: event.target.value });\n    };\n\n    getInsult = () => { \n        var client = new HttpClient();\n        client.get(\"https://insult.mattbas.org/api/insult\", (response) => {\n            response = \" is\".concat(response.substr(7));\n            response = this.state.name.concat(response);\n            document.getElementById(\"response\").innerHTML = response;\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"container d-flex flex-column justify-content-center align-items-center vh-100\">\n                <Bounce><img className=\"emoji\" src={emoji} alt=\"\"/></Bounce>\n                <InputGroup className=\"m-3\">\n                    <FormControl onChange={this.handleChange}\n                        placeholder=\"Name goes here\"\n                        aria-label=\"A hated name\"\n                    />\n                    <InputGroup.Append>\n                        <Button onClick={this.getInsult} variant=\"primary\">Click me!</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                <Alert variant=\"dark\">\n                    <h1 id=\"response\">Prepare some tissues</h1>\n                </Alert>\n            </div>\n        )\n    };\n}\n\nexport default Home;\n\nvar HttpClient = function() {\n    this.get = function(theUrl, callback) {\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.onreadystatechange = function() { \n            if (xmlHttp.readyState === 4 && xmlHttp.status === 200)\n                callback(xmlHttp.responseText);\n        }\n        xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous \n        xmlHttp.send(null);\n    }\n}\n","import React, {Component} from \"react\";\nimport Body from \"../Body/Body.js\";\nimport Navi from \"../Navi/Navi.js\";\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div class=\"min-vh-100\">\n                <Navi/>\n                <Body/>\n            </div>\n        )\n    }\n}\n\nexport default Homepage;\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from \"./About/About.js\";\nimport Homepage from \"./Homepage/Homepage.js\"\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Homepage}/>\n                <Route path=\"/about\" component={About}/>\n            </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pizza.289a6d6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/emoji.0980aff7.svg\";"],"sourceRoot":""}